<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
//  Fragment.cs is built from the T4 template fragment.tt.  Do NOT change this file,  change the .tt
using System;
using System.Collections.Generic;
using System.Linq;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Input;
using DacpacExplorer.External;
using FirstFloor.ModernUI.Windows;
using FirstFloor.ModernUI.Windows.Controls;
using FirstFloor.ModernUI.Windows.Navigation;
using Microsoft.SqlServer.Dac;
using Microsoft.SqlServer.Dac.Model;
using Microsoft.SqlServer.TransactSql.ScriptDom;
using System.Diagnostics;
using DacpacExplorer.Pages;
using System.Windows.Media;

<#
  Type[] TypesInAssembly = null;
  string AssemblyName = string.Empty;
  string AssemblyPath = string.Empty;
  string ExecutingAssemblyPath = string.Empty;
  object Result, DecryptedResult = null;

  AssemblyPath = "C:\\Program Files (x86)\\Microsoft SQL Server\\120\\SDK\\Assemblies\\Microsoft.SqlServer.TransactSql.ScriptDom.dll";
            
  System.Reflection.Assembly MyAssembly =   System.Reflection.Assembly.LoadFrom(AssemblyPath);

  TypesInAssembly = MyAssembly.GetTypes();


#>

namespace DacpacExplorer.TSqlFragmentProcess
{
	class TSqlFragmentProcess
	{
		public Explorer Explorer;

		public TSqlFragmentProcess(Explorer ExplorerIn){
			Explorer = ExplorerIn;
		}

		private TreeViewItem AddTSqlFragment(string Node, TSqlFragment currentFragment, TreeViewItem currentObjectTreeViewItem)
        {
            var childTreeViewItem = Explorer.AddTreeItem(Node, currentObjectTreeViewItem,Brushes.Green);

            var propertiesPageBuilder = new PropertiesPageBuilder();
            //var properties = null;// propertiesPageBuilder.GetPropertiesDisplay(currentObject);
            string script = "";

			if(currentFragment!=null){
				Microsoft.SqlServer.TransactSql.ScriptDom.Sql120ScriptGenerator sg = new Sql120ScriptGenerator();
				sg.GenerateScript(currentFragment, out script);
			}


            childTreeViewItem.Tag = new CachedObjectDisplay()
            {
                Properties = null,
                Script = script
            };

            return (childTreeViewItem);


        }		
<#
		foreach(System.Type t in TypesInAssembly){
			if (isBaseTSqlFragment(t)){
				string s = t.Name;
				string [] words = s.Split('.');
				string Class = words[words.Length-1];

#>


			 private void Display<#=Class#>(Microsoft.SqlServer.TransactSql.ScriptDom.<#=s#> currentFragment, TreeViewItem currentObjectTreeViewItem)
	        {
<#
						System.Reflection.MethodInfo[] MethodsCollection = t.GetMethods();
                        foreach (var m in MethodsCollection)
                        {
							string l=m.Name;									
							l=l.Replace("get_","");
							if(isBaseTSqlFragment(m.ReturnType) && l!="Item"){
#>
								ProcessTSQLFragment(currentFragment.<#=l#>,currentObjectTreeViewItem);
<#
							}
                            if (m.Name.Length>=5 && m.Name.Substring(0, 4) == "get_")
                            {
                                if (m.ReturnType.Name.Length>5 && m.ReturnType.Name.Substring(0, 5) == "IList")
                                {
									
									  Type itemType = m.ReturnType.GetGenericArguments()[0]; 
									string f=m.Name;
									
									f=f.Replace("get_","");
									if(isBaseTSqlFragment(itemType)){
#>
								
								{
									var newItem=AddTSqlFragment("<#=f#>"+"["+currentFragment.<#=f#>.Count.ToString()+"]",null, currentObjectTreeViewItem);
									int c=0;
								foreach(var i in currentFragment.<#=f#>){
									ProcessTSQLFragment(i,newItem,c);
									c++;
								
								}
								}

<#
									}
                                }
                                
                            }

                        }

#>
			} // End

<#

			}
		}

#>

		public void ProcessTSQLFragment(TSqlFragment currentFragment, TreeViewItem currentObjectTreeViewItem,int ArrCount=-1){
			 if(currentFragment==null)return;
			 var s = currentFragment.GetType().ToString();
			 if(ArrCount!=-1){
				s+="["+ArrCount.ToString()+"]";
			 }
			 var newItem=AddTSqlFragment(s, currentFragment, currentObjectTreeViewItem);

            switch (currentFragment.GetType().ToString())
            {

<#
			foreach(System.Type t in TypesInAssembly){
				if (isBaseTSqlFragment(t)){
					string s = t.Name;
				string [] words = s.Split('.');
				string Class = words[words.Length-1];
#>		
				case "<#=t#>":
					Display<#=Class#>((<#=t#>)currentFragment,newItem);
					break;
<#
				}
			}

#>
			}// EndSwitch

		
		}
		

	}
}


<#+

public bool isBaseTSqlFragment(System.Type t)
        {
            System.Type b = t.BaseType;
            while (b != null)
            {
                if (b.Name == "TSqlFragment")
                {
                    break;

                }
                b = b.BaseType;

            }
            if(b==null)return false;
            return true;
        }


#>